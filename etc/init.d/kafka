#! /bin/sh
# /etc/init.d/kafka: Init script for the kafka daemon.

# chkconfig: 345 80 20
# description: Kafka message broker service 

. /lib/lsb/init-functions

ECHO="/bin/echo"
USER=kafka
BASEDIR="/opt/kafka"
LOGDIR="/var/log/kafka"
PIDFILE="/var/run/kafka.pid"

START="${BASEDIR}/bin/kafka-server-start.sh"
STOP="${BASEDIR}/bin/kafka-server-stop.sh"
CONFIG=/etc/kafka/server.properties

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin

NAME=kafka
DESC="Kafka daemon"

RETVAL=0

if [ ! -d "${LOGDIR}" ]; then
    echo "${0}: missing log directory: ${LOGDIR}"
    exit 1
fi

# detect the distribution:
if [ -f /etc/redhat-release -o -f /etc/fedora-release ] ; then
  DISTRIBUTION="redhat"
elif [ -f /etc/SuSE-release ] ; then
  DISTRIBUTION="suse"
elif [ -f /etc/debian_version ] ; then
  DISTRIBUTION="debian"
else
  DISTRIBUTION="debian"
fi

# Source function library.
[ "$DISTRIBUTION" = "redhat" ] && . /etc/init.d/functions
[ "$DISTRIBUTION" = "suse" ] && . /etc/rc.status

if [ "$DISTRIBUTION" = "suse" ] ; then
  echo_success() {
    rc_status -v
  }
  echo_failure() {
    rc_status -v
  }
  success() {
    echo_success
  }
  failure() {
    echo_success
  }
elif [ "$DISTRIBUTION" = "debian" ] ; then
  echo_success() {
    echo ok
  }
  echo_failure() {
    echo failed
  }
  success() {
    echo_success
  }
  failure() {
    echo_success
  }
fi

PROCESS_IDS () {
    ppid=$(cat $PIDFILE)
    pids=""
    while [ "${ppid}" ] ; do
        if [ -n "${pids}" ] ; then
            pids="${pids} ${ppid}"
        else
            pids="${ppid}"
        fi
        ppid=$(ps --ppid "${ppid}" -o pid h | sed 's:^ *::')
    done
    echo "${pids}"
}

do_start() {
  #ulimit -n 65536
  #ulimit -s 10240
  #ulimit -c unlimited
  #echo -n "Starting $prog: "
  #cd $HOME
  #nohup su $USER -c "./bin/kafka-server-start.sh /etc/kafka/server.properties </dev/null 2>&1 | cronolog /var/log/kafka/kafka.%Y%m%d.log 2>&1" </dev/null >/dev/null 2>&1 &

  #RETVAL=$?
  #[ $RETVAL -eq 0 ] && echo_success
  #[ $RETVAL -ne 0 ] && echo_failure
  #  echo
  #return $RETVAL
  echo  -n "Starting kafka ... "
    if [ -f "${PIDFILE}" ]; then
      PID=$(cat "${PIDFILE}")
      if kill -0 "{$PID}" > /dev/null 2>&1; then
         echo "kafka already running as process ${PID} per PID file ${PIDFILE}". 
         exit 0
      fi
    fi

    #nohup su $USER -c "${START} ${CONFIG} </dev/null 2>&1 | cronolog ${LOGDIR}/kafka.%Y%m%d.log 2>&1" </dev/null >/dev/null 2>&1 &
    #daemon --user "${USER}" "${START}" "${CONFIG}" > ${LOGDIR}/kafka.log 2>&1 < /dev/null &
    start-stop-daemon --chuid $USER --start --quiet --background --pidfile $PIDFILE --exec $START $CONFIG || return 2
    
    if [ $? -eq 0 ]
    then
      if /bin/echo -n $! > "${PIDFILE}"
      then
        sleep 2
        PIDS=$(PROCESS_IDS)
        COUNT=$(ps -o args ${PIDS} | grep -v COMMAND | grep -c kafka)
        if [ "${COUNT}" != 0 ]; then
	    echo "started"
	    exit 0;
	else
	    echo "failed"
	    exit 1;
	fi
      else
        echo "failed to write ${PIDFILE}"
        exit 1
      fi
    else
      echo "failed"
      exit 1
    fi
}

do_stop() {
  # Return
  #   0 if daemon has been stopped
  #   1 if daemon was already stopped
  #   2 if daemon could not be stopped
  #   other if a failure occurred

  echo "Stopping $NAME: "
  ps -ef | grep 'kafka' | awk '{print $2}' | xargs kill -9
  echo "Stopped $NAME."
  


  # echo -n "Stopping kafka ... "
  #  if [ ! -f "${PIDFILE}" ]
  #  then
  #    echo "no kafka to stop (could not find file ${PIDFILE})"
  #  else
  #    PIDS=$(PROCESS_IDS)
  #    kill ${PIDS}
  #    sleep 4;
  #    COUNT=$(ps -o args ${PIDS} | grep -v COMMAND | grep -c kafka)
  #    if [ "${COUNT}" != 0 ]; then
  #      kill -9 ${PIDS} 2>/dev/null
  #      sleep 4;
  #      COUNT=$(ps -o args ${PIDS} | grep -v COMMAND | grep -c kafka)
  #    fi
  #    if [ "${COUNT}" = 0 ]; then
  #      echo "stopped";
  #      rm "${PIDFILE}"
  #      exit 0;
  #    else
  #      echo "failed";
  #      exit 1;
  #    fi
  #  fi
  #  exit 0
}

do_reload() {
  do_stop
  sleep 2
  do_start
}

do_restart() {
  do_stop
  sleep 2
  do_start
}

do_status() {
 if [ ! -f "${PIDFILE}" ]
    then
      echo "no kafka to poll (could not find file ${PIDFILE})"
      exit 1;
    else
      PIDS=$(PROCESS_IDS);
      COUNT=$(ps -o args ${PIDS} | grep -v COMMAND | grep -c kafka)
      if [ "${COUNT}" = 0 ]; then
        echo "Kafka not running"
      else
         echo "Kafka running as processes ${PIDS} per PID file ${PIDFILE}".
      fi
    fi
    exit 0;
}

case "$1" in
start)
  do_start
  ;;

stop)
  do_stop
  ;;

reload)
  do_reload
  ;;

restart)
	do_restart
  ;;
  
status)
	do_status
  ;;

*)
  echo $"Usage: $0 {start|stop|reload|restart|status}"
  
esac
